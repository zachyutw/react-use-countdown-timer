{"version":3,"sources":["useCountdown.js","App.js","index.js"],"names":["initState","actived","timer","period","reducer","state","action","type","useCountdown","propPeriod","gap","useReducer","dispatch","setCountdownTimer","useCallback","useEffect","intervalId","countDownInterval","setInterval","clearInterval","App","timer1","timer2","timer3","style","padding","width","ReactDOM","render","document","getElementById"],"mappings":"gzBACA,IAAMA,EAAY,CACdC,SAAS,EACTC,MAAO,IACPC,OAAQ,KAENC,EAAU,SAACC,EAAOC,GACpB,OAAQA,EAAOC,MACX,IAAK,QACD,OAAO,EAAP,GAAYF,EAAZ,CAAmBJ,SAAS,IAChC,IAAK,UACD,OAAO,EAAP,GAAYI,EAAZ,CAAmBH,MAAOI,EAAOJ,QACrC,IAAK,MACD,OAAO,EAAP,GAAYG,EAAZ,CAAmBJ,SAAS,EAAOC,MAAO,IAC9C,IAAK,WACD,OAAO,EAAP,GAAYG,EAAZ,GAAsBC,GAC1B,QACI,MAAO,KAkCJE,EA/BM,SAAC,GAAwC,IAA9BC,EAA6B,EAArCN,OAAqC,IAAjBO,WAAiB,MAAX,IAAW,IAC7BC,qBAAWP,EAAD,KAAeJ,EAAf,CAA0BE,MAAOO,EAAYN,OAAQM,KADlC,mBACjDJ,EADiD,KAC1CO,EAD0C,KAEjDX,EAA2BI,EAA3BJ,QAASC,EAAkBG,EAAlBH,MAAOC,EAAWE,EAAXF,OAClBU,EAAoBC,uBACtB,SAACX,GACGS,EAAS,CAAEL,KAAM,WAAYN,SAAS,EAAME,aAEhD,CAAES,IAsBN,OAnBAG,qBACI,WACI,IAAIC,EACJ,GAAIf,EAAS,CACTW,EAAS,CAAEL,KAAM,UACjB,IAAIU,EAAoBd,EACxBa,EAAaE,aAAY,WAErBN,EAAS,CAAEL,KAAM,UAAWL,MAD5Be,GAAwCP,IAEpCO,GAAqB,IACrBL,EAAS,CAAEL,KAAM,QACjBY,cAAcH,MAEnBN,GAEP,OAAO,kBAAMS,cAAcH,MAE/B,CAAEb,EAAQF,EAASW,EAAUF,IAE1B,CAAER,EAAOW,IChCLO,EAdH,WAAO,IAAD,EACKZ,EAAa,CAAEL,OAAQ,MAAlCkB,EADM,sBAEKb,EAAa,CAAEL,OAAQ,IAAOO,IAAK,MAA9CY,EAFM,sBAGKd,EAAa,CAAEL,OAAQ,IAAOO,IAAK,MAA9Ca,EAHM,oBAKd,OACI,yBAAKC,MAAO,CAAEC,QAAS,OAAQC,MAAO,SAClC,iDACA,iDAAuBL,EAAS,KAChC,+CAAqBC,EAAS,KAC9B,+CAAqBC,EAAS,OCP1CI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.99f84b3d.chunk.js","sourcesContent":["import { useCallback, useEffect, useReducer } from 'react';\nconst initState = {\n    actived: true,\n    timer: 10000,\n    period: 10000\n};\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'start':\n            return { ...state, actived: true };\n        case 'running':\n            return { ...state, timer: action.timer };\n        case 'end':\n            return { ...state, actived: false, timer: 0 };\n        case 'setValue':\n            return { ...state, ...action };\n        default:\n            return {};\n    }\n};\nconst useCountdown = ({ period: propPeriod, gap = 1000 }) => {\n    const [ state, dispatch ] = useReducer(reducer, { ...initState, timer: propPeriod, period: propPeriod });\n    const { actived, timer, period } = state;\n    const setCountdownTimer = useCallback(\n        (period) => {\n            dispatch({ type: 'setValue', actived: true, period });\n        },\n        [ dispatch ]\n    );\n\n    useEffect(\n        () => {\n            let intervalId;\n            if (actived) {\n                dispatch({ type: 'start' });\n                let countDownInterval = period;\n                intervalId = setInterval(function (){\n                    countDownInterval = countDownInterval - gap;\n                    dispatch({ type: 'running', timer: countDownInterval });\n                    if (countDownInterval <= 0) {\n                        dispatch({ type: 'end' });\n                        clearInterval(intervalId);\n                    }\n                }, gap);\n            }\n            return () => clearInterval(intervalId);\n        },\n        [ period, actived, dispatch, gap ]\n    );\n    return [ timer, setCountdownTimer ];\n};\nexport default useCountdown;\n","import React from 'react';\nimport useCountdown from './useCountdown';\n\nconst App = () => {\n    const [ timer1 ] = useCountdown({ period: 10000 });\n    const [ timer2 ] = useCountdown({ period: 10000, gap: 500 });\n    const [ timer3 ] = useCountdown({ period: 10000, gap: 100 });\n\n    return (\n        <div style={{ padding: '20px', width: '100%' }}>\n            <h1>Test Use Coundown</h1>\n            <p>speed normal 1sec: {timer1 / 1000}</p>\n            <p>speed gap 500ms: {timer2 / 1000}</p>\n            <p>speed gap 100ms: {timer3 / 1000}</p>\n        </div>\n    );\n};\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}